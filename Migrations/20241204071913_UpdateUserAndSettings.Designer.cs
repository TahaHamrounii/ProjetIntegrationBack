// <auto-generated />
using System;
using Message.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Message.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241204071913_UpdateUserAndSettings")]
    partial class UpdateUserAndSettings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Message.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastActiveTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "raed123",
                            Avatar = "default-avatar.jpg",
                            CreatedAt = new DateTime(2024, 12, 4, 7, 19, 13, 275, DateTimeKind.Utc).AddTicks(5884),
                            Email = "raed@test.com",
                            LastActiveTime = new DateTime(2024, 12, 4, 7, 19, 13, 275, DateTimeKind.Utc).AddTicks(5884),
                            Name = "Raed Test",
                            Password = "$2a$11$LXHFQQMxrbCunbXWCDbei.Kxdkl/YfSwwnNDj/NclB7EbTxhTuiNe",
                            UpdatedAt = new DateTime(2024, 12, 4, 7, 19, 13, 275, DateTimeKind.Utc).AddTicks(5884),
                            Username = "raed"
                        });
                });

            modelBuilder.Entity("Message.Models.UserSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 4, 7, 19, 13, 275, DateTimeKind.Utc).AddTicks(5884),
                            IsActive = true,
                            Language = "en",
                            Theme = "dark",
                            UpdatedAt = new DateTime(2024, 12, 4, 7, 19, 13, 275, DateTimeKind.Utc).AddTicks(5884),
                            UserId = "raed123"
                        });
                });

            modelBuilder.Entity("Message.Models.UserSettings", b =>
                {
                    b.HasOne("Message.Models.User", "User")
                        .WithOne("Settings")
                        .HasForeignKey("Message.Models.UserSettings", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Message.Models.User", b =>
                {
                    b.Navigation("Settings");
                });
#pragma warning restore 612, 618
        }
    }
}
